@using System.ComponentModel.DataAnnotations
@using ViharaFund.Application.DTOs.Donor
@inherits MudComponentBase
@inject HttpClient HttpClient
@inject ISnackbar Snackbar

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@(IsEdit? Icons.Material.Filled.Edit : Icons.Material.Filled.PersonAdd)" Class="mr-3" />
            @(IsEdit ? "Edit Donor" : "Add New Donor")
        </MudText>
    </TitleContent>

    <DialogContent>
        <MudForm @ref="form" @bind-IsValid="@isValid">
            <MudGrid>
                <MudItem xs="12" sm="6" md="6" lg="6">
                    <MudTextField @bind-Value="Donor.Name"
                                  Label="Name"
                                  Required="true"
                                  RequiredError="Name is required"
                                  Variant="Variant.Outlined" />
                </MudItem>

                <MudItem xs="12" sm="6" md="6" lg="6">
                    <MudTextField @bind-Value="Donor.Email"
                                  Label="Email"
                                  Validation="@(new EmailAddressAttribute() { ErrorMessage = "Invalid email format" })"
                                  Variant="Variant.Outlined" />
                </MudItem>

                <MudItem xs="12" sm="6" md="6" lg="6">
                    <MudTextField @bind-Value="Donor.Phone"
                                  Label="Phone"
                                  Variant="Variant.Outlined" />
                </MudItem>

                <MudItem xs="12" sm="6" md="6" lg="6">
                    <MudTextField @bind-Value="Donor.Address"
                                  Label="Address"
                                  Variant="Variant.Outlined" />
                </MudItem>

                <MudItem xs="12" sm="6" md="6" lg="6">
                    <MudSwitch @bind-Value="Donor.RequestedAsUnknownDonor"
                               Label="Requested As Unknown Donor"
                               Color="Color.Primary" />
                </MudItem>
  
            </MudGrid>
        </MudForm>
    </DialogContent>

    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary"
                   Variant="Variant.Filled"
                   OnClick="Submit"
                   Disabled="!isValid">
            @(IsEdit ? "Update" : "Create")
        </MudButton>
    </DialogActions>
</MudDialog>


@code {
    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; } = null!;

    [Parameter]
    public bool IsEdit { get; set; }

    [Parameter]
    public DonorDTO Donor { get; set; } = new();

    private MudForm form = null!;
    private bool isValid;

    protected override async Task OnInitializedAsync()
    {

    }

    private async Task LoadMasterDataAsync()
    {

    }

    void Submit()
    {
        if (isValid)
        {
            MudDialog.Close(DialogResult.Ok(Donor));
        }
    }

    void Cancel() => MudDialog.Cancel();
}
